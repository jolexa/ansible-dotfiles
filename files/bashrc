# Test for an interactive shell.  There is no need to set anything
# past this point for scp and rcp, and it's important to refrain from
# outputting anything in those cases.
if [[ $- != *i* ]] ; then
    # Shell is non-interactive.  Be done now!
    return
fi

# Enable bash-completion
[[ -f $HOME/.bash-completion.sh ]] && source $HOME/.bash-completion.sh
# Enable bash aliases in seperate file for maintenance reasons
[[ -f $HOME/.bash_aliases ]] && source $HOME/.bash_aliases

export EDITOR=vim
export LANG=en_US.UTF-8
# PATHing
export PATH="$HOME/bin:/usr/sbin:/sbin:${PATH}"
# local rubygems
for i in $HOME/.gem/ruby/*/bin; do
    PATH+=":$i"
done

# Prefer to set some HIST variables
# Colon seperated list of commands to ignore
export HISTIGNORE="ls:fg:bg"
export HISTCONTROL=ignoredups
# Keep 1000 lines in .bash_history (default is 500)
export HISTSIZE=1000
export HISTFILESIZE=1000

# git prompt helpers
get_sha() {
	git rev-parse --short HEAD 2>/dev/null
}
[[ -e $HOME/.git-prompt.sh ]] && source $HOME/.git-prompt.sh
GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWUNTRACKEDFILES=1
GIT_PS1_SHOWUPSTREAM="verbose"
PROMPT_DIRTRIM=5
# accommodate for sudo
if [[ $(id -u) == 0 ]]; then
	PS1='\[\e[33;0;31m\]\u@\[\e[33;1;32m\]\h:\[\e[33;1;34m\]\w$(__git_ps1 " [%s $(get_sha)] ")\n\[\e[33;0;31m\]#\[\e[0m\] '
else
	PS1='\[\e[33;1;32m\]\h:\[\e[33;1;34m\]\w$(__git_ps1 " [%s $(get_sha)] ") \n$\[\e[0m\] '
fi

# http://theoldschooldevops.com/2008/02/09/bash-ini-parser/
cfg_parser ()
{
    ini="$(<$1)"                # read the file
    ini="${ini//[/\[}"          # escape [
    ini="${ini//]/\]}"          # escape ]
    IFS=$'\n' && ini=( ${ini} ) # convert to line-array
    ini=( ${ini[*]//;*/} )      # remove comments with ;
    ini=( ${ini[*]/\    =/=} )  # remove tabs before =
    ini=( ${ini[*]/=\   /=} )   # remove tabs be =
    ini=( ${ini[*]/\ =\ /=} )   # remove anything with a space around =
    ini=( ${ini[*]/#\\[/\}$'\n'cfg.section.} ) # set section prefix
    ini=( ${ini[*]/%\\]/ \(} )    # convert text2function (1)
    ini=( ${ini[*]/=/=\( } )    # convert item to array
    ini=( ${ini[*]/%/ \)} )     # close array parenthesis
    ini=( ${ini[*]/%\\ \)/ \\} ) # the multiline trick
    ini=( ${ini[*]/%\( \)/\(\) \{} ) # convert text2function (2)
    ini=( ${ini[*]/%\} \)/\}} ) # remove extra parenthesis
    ini[0]="" # remove first element
    ini[${#ini[*]} + 1]='}'    # add the last brace
    eval "$(echo "${ini[*]}")" # eval the result
}

## Begin AWS
export AWS_CONFIG_FILE=$HOME/.aws_config
function awsenv() {
    if [[ $1 == clear ]]; then
        PS1="${_PS1}"; unalias aws; unalias s3cmd;
        unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_DEFAULT_REGION
    else
        _PS1=${PS1}; PS1="(aws$1) ${PS1}"
        alias aws="aws --profile $1"
        alias s3cmd="s3cmd -c $HOME/.aws/s3cmd_creds_$1"
        cfg_parser "$HOME/.aws/credentials"
        cfg.section.$1
        export AWS_ACCESS_KEY_ID=$(echo $aws_access_key_id)
        export AWS_SECRET_ACCESS_KEY=$(echo $aws_secret_access_key)
        export AWS_DEFAULT_REGION=us-east-1
    fi
}
# add bash completion
complete -C aws_completer aws
## End AWS
